//
//  EditInteractor.swift
//  CleanSwift
//
//  Created by Lukasz szyszkowski on 13.11.2016.
//  Copyright (c) 2016 Lukasz Szyszkowski. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol EditInteractorInput
{
  func updateTextField(request:Edit.UpdateTextField.Request)
  func saveAction(request:Edit.SaveAction.Request)
  func updateContainerView()
  func updateSaveButton()
  func closeViewController()
}

protocol EditInteractorOutput
{
  func presentUpdatedContainerView()
  func presentUpdatedSaveButton(response:Edit.UpdateSaveButton.Response)
  func presentUpdatedTextField(response:Edit.UpdateTextField.Response)
  func presentClosedViewController()
}

class EditInteractor: EditInteractorInput
{
  var output: EditInteractorOutput!
  private let worker = EditWorker()
  
  func updateTextField(request: Edit.UpdateTextField.Request) {
    let response =
      Edit.UpdateTextField.Response(
        text: request.text
    )
    output.presentUpdatedTextField(response)
  }
  
  func updateContainerView() {
    output.presentUpdatedContainerView()
  }
  
  func updateSaveButton() {
    let response =
      Edit.UpdateSaveButton.Response(
        title: NSLocalizedString("save", comment: "Edit VC save button title")
    )
    output.presentUpdatedSaveButton(response)
  }
  
  func closeViewController() {
    output.presentClosedViewController()
  }
  
  func saveAction(request: Edit.SaveAction.Request) {
    worker.update(request.text) { [weak self] in
      self?.output.presentClosedViewController()
    }
  }
}
