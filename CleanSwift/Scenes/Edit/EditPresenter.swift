//
//  EditPresenter.swift
//  CleanSwift
//
//  Created by Lukasz szyszkowski on 13.11.2016.
//  Copyright (c) 2016 Lukasz Szyszkowski. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import ChainedAttributedString

protocol EditPresenterInput
{
  func presentUpdatedContainerView()
  func presentClosedViewController()
  func presentUpdatedSaveButton(response:Edit.UpdateSaveButton.Response)
  func presentUpdatedTextField(response:Edit.UpdateTextField.Response)
}

protocol EditPresenterOutput: class
{
  func updateContainerView(model:Edit.UpdateContainerView.ViewModel)
  func updateTextField(model:Edit.UpdateTextField.ViewModel)
  func updateSaveButton(model:Edit.UpdateSaveButton.ViewModel)
  func closeViewController()
}

class EditPresenter: EditPresenterInput
{
  weak var output: EditPresenterOutput!
  
  func presentUpdatedContainerView() {
    let model =
      Edit.UpdateContainerView.ViewModel(
        backgroundColor: Color.Gray.rawValue,
        cornerRadius: Globals.View.cornerRadius
    )
    output.updateContainerView(model)
  }
  
  func presentUpdatedTextField(response: Edit.UpdateTextField.Response) {
    let model =
      Edit.UpdateTextField.ViewModel(text: response.text)
    output.updateTextField(model)
  }
  
  func presentUpdatedSaveButton(response: Edit.UpdateSaveButton.Response) {
    let title = response.title.attributedString()
      .font(Font.bold(FontSize.medium.rawValue).make)
      .textColor(Color.Lime.make)
    let model =
      Edit.UpdateSaveButton.ViewModel(
        title: title,
        backgroundColor: Color.Graphite.rawValue,
        cornerRadius: Globals.Button.cornerRadius
    )
    output.updateSaveButton(model)
  }
  
  func presentClosedViewController() {
    output.closeViewController()
  }
}
